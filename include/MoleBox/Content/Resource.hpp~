#ifndef RESOURCE_H
#define RESOURCE_H

#include <string>
#include <list>
#include <SFML/Graphics.hpp>
#include <SFML/Audio.hpp>
#include <MoleBox/Content/ContentTemplate.hpp>
#include <MoleBox/Lua/Script.hpp>

namespace MB {
  namespace Content {      
 
    
  struct ResourceVisitor;
    
    class Resource {
      protected:
	std::string type;
      public:
	Resource(std::string type);
	~Resource();
	std::string Type();
	virtual void Load(std::string file) = 0;
	virtual bool CheckExtension(std::string extension) = 0;
	virtual MB::Content::StrVect List() = 0;
    };
    
    class RSprite : public Resource
    {
      
    public:
      RSprite(std::string type = "sprite");
      ~RSprite();
      
      void Load(std::string file);
      bool CheckExtension(std::string extension);
      MB::Content::StrVect List();
    };
    
    class RSound : public Resource
    {
      
    public:
      RSound(std::string type = "sound");
      ~RSound();
      
      void Load(std::string file);
      bool CheckExtension(std::string extension);
      MB::Content::StrVect List();
    };
    
    class RMusic : public Resource
    {
      
    public:
      RMusic(std::string type = "music");
      ~RMusic();
      

      void Load(std::string file);
      bool CheckExtension(std::string extension);
      MB::Content::StrVect List();
      
    };
    
    class RLuaScript : public Resource
    {
      
    public:
      RLuaScript(std::string type = "luascript");
      ~RLuaScript();
      void Load(std::string file);
      bool CheckExtension(std::string extension);
      MB::Content::StrVect List();
    };
    

  }
}

#endif